2.1 10200

2.2.1 200
2.2.2 Exceptional

3
10200 15300 30300

5
ใช้ SQLlite ในการทำครับ
5.2
INSERT INTO Branch (BranchName)
VALUES ('เชียงใหม่'),('เชียงราย'),('ภูเก็ต');

5.3
DELETE FROM Position
WHERE PositionName = 'sale';

5.4
UPDATE Branch
SET BranchName = 'นาโกย่า'
WHERE BranchName = 'ญี่ปุ่น';

5.5
SELECT * FROM Employee;

5.6
SELECT Employee.Name, Branch.BranchName
FROM Employee
INNER JOIN Branch ON Employee.BranchID = Branch.BranchID
WHERE Branch.BranchName IN ('สนามบินสุวรรณภูมิ', 'กรุงเทพ');

5.7
SELECT Employee.Name
FROM Employee
INNER JOIN Branch ON Employee.BranchID = Branch.BranchID
INNER JOIN Position ON Employee.PositionID = Position.PositionID
WHERE Branch.BranchName = 'กรุงเทพ' AND Position.PositionName = 'programmer';

5.8
SELECT Employee.Name AS EmployeeName, Branch.BranchName AS BranchName, Position.PositionName AS PositionName
FROM Employee
INNER JOIN Branch ON Employee.BranchID = Branch.BranchID
INNER JOIN Position ON Employee.PositionID = Position.PositionID;

6 เปิดหาข้อมูลที่เกี่ยวข้องกับปัญหาที่เจอจาก community ต่างๆ

7 เป็นรูปแบบการพัฒนาโครงสร้างแอปพลิเคชันซอฟต์แวร์ที่มีการแบ่งหน้าที่ออกเป็น 3 ส่วน ได้แก่ Model,view,controller
1.Model ทำหน้าที่ในการเก็บข้อมูลและจัดการข้อมูล
2.view ทำหน้าที่ให้การแสดงผลลัพธ์ให้แก่ผู้ใช้
3.controller ทำหน้าที่ในการควบคุมการทำงานระหว่าง model และ view 

8 ทำการบันทึกและติดตามการเปลี่ยนแปลงของโค้ดในไฟล์โปรเจคเพื่อทำให้ทีมพัฒนาสามารถทำงานร่วมกันและสามารถทำการย้อนเวอร์ชันได้

9 ไม่เคยครับ

10 React และ Node.js ที่เลือกใช้เพราะว่า React มีการใช้การที่เข้าใจได้ง่ายและเมื่อติดปัญหาสามารถหาข้อมูลที่เกี่ยวกับปัญหาได้ง่ายมากๆ ตัวของ react สามารถที่จะทำงานแบบแยก component ได้ทำงานร่วมกับหลังบ้านได้ดี ส่วน Node.js ที่เลือกใช้เพราะว่าต้องการเชื่อม API และมี community ที่ใหญ่หาข้อมูลที่ต้องการได้สะดวก